"use strict";var obsidian=require("obsidian"),Utils;
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function __awaiter(t,e,a,n){return new(a||(a=Promise))((function(s,i){function o(t){try{l(n.next(t))}catch(t){i(t)}}function r(t){try{l(n.throw(t))}catch(t){i(t)}}function l(t){var e;t.done?s(t.value):(e=t.value,e instanceof a?e:new a((function(t){t(e)}))).then(o,r)}l((n=n.apply(t,e||[])).next())}))}!function(t){t.copyStringToClipboard=function(t){var e=document.createElement("textarea");e.value=t,e.setAttribute("readonly",""),document.body.appendChild(e),e.select(),document.execCommand("copy"),document.body.removeChild(e)},t.removeMd=function(t,e={listUnicodeChar:"",stripListLeaders:!0,gfm:!0,useImgAltText:!0}){let a=t.replace(/^---[\s\S]*---\n*/g,"").replace(/\[\[[^\|\[\]]*\|([^\|\[\]]*)\]\]/g,"$1").replace(/\[\[(.*)\]\]/g,"$1").replace(/```([^`])*```\n*/g,"").replace(/\$([^$])*\$*/g,"").replace(/^(-\s*?|\*\s*?|_\s*?){3,}\s*$/gm,"");try{e.stripListLeaders&&(a=e.listUnicodeChar?a.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm,e.listUnicodeChar+" $1"):a.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm,"$1")),e.gfm&&(a=a.replace(/\n={2,}/g,"\n").replace(/~{3}.*\n/g,"").replace(/~~/g,"").replace(/`{3}.*\n/g,"")),a=a.replace(/<[^>]*>/g,"").replace(/^[=\-]{2,}\s*$/g,"").replace(/\[\^.+?\](\: .*?$)?/g,"").replace(/\s{0,2}\[.*?\]: .*?$/g,"").replace(/\!\[(.*?)\][\[\(].*?[\]\)]/g,e.useImgAltText?"$1":"").replace(/\[(.*?)\][\[\(].*?[\]\)]/g,"$1").replace(/^\s{0,3}>\s?/g,"").replace(/^\s{1,2}\[(.*?)\]: (\S+)( ".*?")?\s*$/g,"").replace(/^(\n)?\s{0,}#{1,6}\s+| {0,}(\n)?\s{0,}#{0,} {0,}(\n)?\s{0,}$/gm,"$1$2$3").replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g,"$2").replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g,"$2").replace(/(`{3,})(.*?)\1/gm,"$2").replace(/`(.+?)`/g,"$1").replace(/\n{2,}/g,"\n\n")}catch(e){return console.error(e),t}return a}}(Utils||(Utils={}));const DUAL_URL="http://127.0.0.1:3030",fetchEndpoint=(t,e)=>fetch(DUAL_URL+t,e),getEndpoint=t=>fetchEndpoint(t),postEndpoint=(t,e)=>fetchEndpoint(t,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(e)}),fetchQuery=t=>getEndpoint("/query"+encodeURIComponent(t)),fetchGenerate=t=>postEndpoint("/generate",t),fetchSearch=t=>postEndpoint("/search",t);class SkillManager{constructor(t){this.app=t}followCommand(t){return __awaiter(this,void 0,void 0,(function*(){var e=yield this.matchCommand(t);return console.log("FOLLOWING",t,"USING",e),this.useSkill(e,t)}))}useSkill(t,e){return __awaiter(this,void 0,void 0,(function*(){yield this.loadSkillContents(t),this.loadSkillMetadata(t),this.removeFrontMatter();var a=yield this.getParams(this.skillContents),n=yield this.getArgs(e,a);this.skillContents=this.resolveParams(this.skillContents,a,n);var s=this.detectCodeBlocks(),[i,o]=this.splitBlocks(s),[i,r]=yield this.interpretBlocks(i,o);return this.getLastBlock(i)}))}interpretBlocks(t,e){return __awaiter(this,void 0,void 0,(function*(){var a,n="";for(let s=0;s<t.length;s++)switch(a=this.resolveBodyReferences(t,e,s,n),t[s]=a,e[s]){case"text":n=n.concat(a);break;case"js":t[s]=yield this.waitEval(t[s]),n=n.concat(t[s]);break;case"dual":t[s]=yield this.followCommand(a),n=n.concat(t[s]+" ")}return[t,n]}))}waitEval(toEval){return __awaiter(this,void 0,void 0,(function*(){return eval(toEval)}))}resolveBodyReferences(t,e,a,n){var s=t[a];s=s.replace("#0",n);for(let n=1;n<=a;n++)if(s.includes("#"+n)){var i=n;for(let a=0;a<t.length&&i>0;a++)""==t[a].toString().trim()&&"text"==e[a]||i--,0==i&&(s=s.replace("#"+n,t[a]))}return s}getLastBlock(t){for(let e=t.length-1;e>=0;e--)if(""!=t[e].toString().trim())return t[e]}splitBlocks(t){var e=[this.skillContents],a=["text"];for(let n=0;n<t.length;n++){e.push(t[n].contents),a.push(t[n].type),e.push(e[2*n].slice(t[n].end)),a.push("text"),e[2*n]=e[2*n].slice(0,t[n].start);for(let a=n+1;a<t.length;a++)t[a].start-=e[2*n].length+t[n].end-t[n].start,t[a].end-=e[2*n].length+t[n].end-t[n].start}return[e,a]}detectCodeBlocks(){let t,e=[];const a=RegExp(/\`\`\`(?<type>\w+)(?<contents>(?:\`[^\`]|[^\`])*)\`\`\`/,"g");do{t=a.exec(this.skillContents),t&&(e=e.concat({type:t.groups.type,contents:t.groups.contents.trim(),start:t.index,end:t.index+t[0].length}))}while(t);return e}getParams(t){return __awaiter(this,void 0,void 0,(function*(){var e=t.match(/\*[a-zA-Z0-9\s]*\*/g);return null!=e?(e.forEach(((t,e,a)=>{a[e]=t.substring(1,t.length-1)})),e):[]}))}getArgs(t,e){return __awaiter(this,void 0,void 0,(function*(){var a,n=[];for(let s=0;s<e.length;s++)a=yield this.getArg(t,e[s]),n=n.concat(a);return n}))}getArg(t,e){return __awaiter(this,void 0,void 0,(function*(){if(e==Object.keys(this.skillMetadata[0])[0])return t;var a=this.getParamPrompt(t,e);const n=yield fetchGenerate({prompt:a,context:[t],generate_paragraphs:1});var s=yield n.json();return s=s.output[0].trim()}))}getParamPrompt(t,e){var a,n;return n="Extract "+e+" from the following:\n\n",a=Object.keys(this.skillMetadata[0])[0],this.skillMetadata.forEach(((t,s,i)=>{a in t&&e in t&&(Math.random()>=.6?n+=t[a]+" => "+t[e]+"\n\n":n+=t[a]+" =>  "+t[e]+"\n\n")})),n+=t+" => "}getCommandExamples(){var t,e,a=[],n=[];return this.app.vault.getMarkdownFiles().forEach((s=>{s.path.startsWith("skillset")&&(t=Object.keys(this.app.metadataCache.getFileCache(s).frontmatter[0])[0],this.app.metadataCache.getFileCache(s).frontmatter.forEach(((i,o,r)=>{t in i&&(e=i[t],Object.entries(i).forEach(((t,a,n)=>{a>0&&(e=e.replace(t[1]," ___ "))})),a=a.concat(e),n=n.concat(s.path))})))})),[a,n]}loadSkillContents(t){return __awaiter(this,void 0,void 0,(function*(){var e=this.app.vault.getMarkdownFiles();for(let a=0;a<e.length;a++)e[a].path==t&&(this.skillContents=yield this.app.vault.cachedRead(e[a]))}))}loadSkillMetadata(t){var e=this.app.vault.getMarkdownFiles();for(let a=0;a<e.length;a++)e[a].path==t&&(this.skillMetadata=this.app.metadataCache.getFileCache(e[a]).frontmatter)}matchCommand(t){return __awaiter(this,void 0,void 0,(function*(){t=t.replace(/"[\s\S]*"/,'""');var e=this.getCommandExamples(),a=e[0],n=e[1];const s=yield fetchSearch({prompt:t,context:a,generate_paragraphs:1});return n[(yield s.json()).output[0]]}))}resolveParams(t,e,a){for(let s=0;s<e.length;s++){var n=RegExp("\\*"+e[s]+"\\*","g");t=t.replace(n,a[s])}return t}removeFrontMatter(){this.skillContents=this.skillContents.replace(/---[\s\S]*---/g,"")}getNotes(){return __awaiter(this,void 0,void 0,(function*(){var t=this.app.vault.getMarkdownFiles(),e=[];for(let n=0;n<t.length;n++)if(!t[n].path.startsWith("skillset")){var a=yield this.app.vault.cachedRead(t[n]);a=Utils.removeMd(a),e.push(a)}return e}))}}const contentId="dual-content",statusId="dual-status",inputId="dual-input";class ChatView extends obsidian.ItemView{constructor(t,e){super(t),this.customName="",this.customName=e}getViewType(){return"chat"}getDisplayText(){return"Dual"}getIcon(){return"info"}sendMessage(){const t=document.getElementById(inputId);let e=!1;""!==t.value&&(this.drawMessage(t.value,"right"),new Promise((t=>setTimeout(t,3e3))).then((()=>{0==e&&this.setStatus("typing...")})),new SkillManager(this.app).followCommand(t.value).then((t=>{t.toString().split("\n\n").forEach((t=>{""!=t.trim()&&this.drawMessage(t,"left")})),e=!0,this.setStatus("online")})),t.value="")}makeRequest(t){return __awaiter(this,void 0,void 0,(function*(){const e=yield fetchQuery(t);return yield e.json()}))}load(){super.load(),this.draw()}draw(){const t=this.containerEl.children[1],e=document.createElement("div");e.id="dual-root";const a=e.createEl("header",{attr:{id:"dual-header"}});a.createEl("h3",{cls:"dual-header-title",text:this.customName}),a.createEl("h6",{text:"Online",attr:{id:statusId}}),e.createDiv({attr:{id:contentId}});const n=e.createEl("footer",{attr:{id:"dual-footer"}}),s=n.createEl("input",{type:"text",attr:{id:inputId,size:1}}),i=n.createEl("button",{text:"Send",attr:{id:"dual-btn-send"}});this.registerDomEvent(i,"click",(()=>this.sendMessage())),this.registerDomEvent(s,"keydown",(t=>{"Enter"===t.key&&this.sendMessage()})),t.empty(),t.appendChild(e)}drawMessage(t,e){const a=document.getElementById(contentId),n=a.createDiv({cls:`dual-msg dual-msg-${e}`});obsidian.MarkdownRenderer.renderMarkdown(t,n,this.app.vault.getRoot().path,new obsidian.Component),a.scrollBy(0,1e3)}setStatus(t){document.getElementById(statusId).setText(t)}}const DEFAULT_SETTINGS={customName:"Dual"};class MyPlugin extends obsidian.Plugin{onload(){return __awaiter(this,void 0,void 0,(function*(){yield this.loadSettings(),this.registerView("chat",(t=>new ChatView(t,this.settings.customName))),this.app.workspace.layoutReady&&this.initLeaf(this.app.workspace),this.registerEvent(this.app.workspace.on("layout-ready",(()=>this.initLeaf(this.app.workspace)))),this.addSettingTab(new SampleSettingTab(this.app,this)),this.addCommand({id:"focus-dual-input",name:"Focus Dual input box",callback:()=>document.getElementById(inputId).focus()})}))}initLeaf(t){0==t.getLeavesOfType("chat").length&&t.getRightLeaf(!1).setViewState({type:"chat"})}loadSettings(){return __awaiter(this,void 0,void 0,(function*(){this.settings=Object.assign({},DEFAULT_SETTINGS,yield this.loadData())}))}saveSettings(){return __awaiter(this,void 0,void 0,(function*(){yield this.saveData(this.settings)}))}}class SampleSettingTab extends obsidian.PluginSettingTab{constructor(t,e){super(t,e),this.app=t,this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h3",{text:"Follow these instructions to set up your Dual:"}),new obsidian.Setting(t).setName("RECIPE TEST").setDesc("Press the button to head over to the download page.").addButton((t=>t.setButtonText("TEST").setClass("mod-cta").onClick((()=>__awaiter(this,void 0,void 0,(function*(){alert("Testing")})))))),new obsidian.Setting(t).setName("0. Install Python (3.8+).").setDesc("Press the button to head over to the download page.").addButton((t=>t.setButtonText("Install Python").setClass("mod-cta").onClick((()=>{window.open("https://www.python.org/downloads/")})))),new obsidian.Setting(t).setName("1. Copy snapshot.").setDesc("Press the button to copy the entire vault as concatenated plain text.").addButton((t=>t.setButtonText("Copy snapshot").setClass("mod-cta").onClick((()=>{new obsidian.Notice("Loading files...");let t="";this.app.vault.getMarkdownFiles().forEach((e=>{this.app.vault.cachedRead(e).then((e=>{e=e.replace(/^---[\s\S]*---\n*/g,"").replace(/\[\[[^\|\[\]]*\|([^\|\[\]]*)\]\]/g,"$1").replace(/\[\[(.*)\]\]/g,"$1").replace(/```([^`])*```\n*/g,"").replace(/\$([^$])*\$*/g,""),t=t.concat(e,"\n\n")}))})),new Promise((t=>setTimeout(t,3e3))).then((()=>{t=t.slice(0,5e6),t=Utils.removeMd(t),Utils.copyStringToClipboard(t),new obsidian.Notice("Snapshot successfully copied to clipboard!")}))})))),new obsidian.Setting(t).setName("2. Derive the essence.").setDesc("After following the online instructions, extract 'essence.zip' in '.obsidian/plugins/Dual/'.").addButton((t=>t.setButtonText("Start alignment").setClass("mod-cta").onClick((()=>{window.open("https://colab.research.google.com/drive/1CObehan5gmYO-TvyyYq973a3h-_EYr9_?usp=sharing")})))),new obsidian.Setting(t).setName("3. Configure the skeleton.").setDesc("Run 'python3 -m pip install -r requirements.txt' in '.obsidian/plugins/Dual/skeleton/'."),new obsidian.Setting(t).setName("4. Run the skeleton after you configured the essence.").setDesc("Run 'python3 server.py --path /path/to/your/vault/' in '.obsidian/plugins/Dual/skeleton/'."),new obsidian.Setting(t).setName("5. Restart Obsidian.").setDesc("Head over to the right side panel to talk with your Dual!"),t.createEl("h3",{text:"Congratulations on setting up your Dual!"}),new obsidian.Setting(t).setName("Custom name").setDesc("Customize your Dual's name using the input box. Reload Obsidian for this to take effect.").addText((t=>t.setPlaceholder("Dual").setValue("").onChange((t=>__awaiter(this,void 0,void 0,(function*(){this.plugin.settings.customName=t,yield this.plugin.saveSettings()})))))),new obsidian.Setting(t).setName("Get involved!").addButton((t=>t.setButtonText("Report bugs").setClass("mod-cta").onClick((()=>{window.open("https://github.com/Psionica/Dual/issues")})))).addButton((t=>t.setButtonText("Join Psionica").setClass("mod-cta").onClick((()=>{window.open("https://psionica.org/")}))))}}module.exports=MyPlugin;
