const DUAL_URL = "http://127.0.0.1:3030";
const fetchEndpoint = (endpoint, init) => fetch(DUAL_URL + endpoint, init);
const getEndpoint = (endpoint) => fetchEndpoint(endpoint);
const postEndpoint = (endpoint, body) => fetchEndpoint(endpoint, {
    method: "POST",
    headers: { Accept: "application/json", "Content-Type": "application/json" },
    body: JSON.stringify(body),
});
export const fetchQuery = (query) => getEndpoint("/query" + encodeURIComponent(query));
export const fetchGenerate = (body) => postEndpoint("/generate", body);
export const fetchSearch = (body) => postEndpoint("/search", body);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV0d29yay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm5ldHdvcmsudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxRQUFRLEdBQUcsdUJBQXVCLENBQUM7QUFRekMsTUFBTSxhQUFhLEdBQUcsQ0FBQyxRQUFnQixFQUFFLElBQWtCLEVBQUUsRUFBRSxDQUM3RCxLQUFLLENBQUMsUUFBUSxHQUFHLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUVuQyxNQUFNLFdBQVcsR0FBRyxDQUFDLFFBQWdCLEVBQUUsRUFBRSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNsRSxNQUFNLFlBQVksR0FBRyxDQUFDLFFBQWdCLEVBQUUsSUFBWSxFQUFFLEVBQUUsQ0FDdEQsYUFBYSxDQUFDLFFBQVEsRUFBRTtJQUN0QixNQUFNLEVBQUUsTUFBTTtJQUNkLE9BQU8sRUFBRSxFQUFFLE1BQU0sRUFBRSxrQkFBa0IsRUFBRSxjQUFjLEVBQUUsa0JBQWtCLEVBQUU7SUFDM0UsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO0NBQzNCLENBQUMsQ0FBQztBQUVMLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxDQUFDLEtBQWEsRUFBRSxFQUFFLENBQzFDLFdBQVcsQ0FBQyxRQUFRLEdBQUcsa0JBQWtCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUNwRCxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsQ0FBQyxJQUFlLEVBQUUsRUFBRSxDQUMvQyxZQUFZLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2xDLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUFDLElBQWUsRUFBRSxFQUFFLENBQUMsWUFBWSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IERVQUxfVVJMID0gXCJodHRwOi8vMTI3LjAuMC4xOjMwMzBcIjtcblxuaW50ZXJmYWNlIElQb3N0Qm9keSB7XG4gIHByb21wdDogc3RyaW5nO1xuICBjb250ZXh0OiBzdHJpbmdbXTtcbiAgZ2VuZXJhdGVfcGFyYWdyYXBoczogbnVtYmVyO1xufVxuXG5jb25zdCBmZXRjaEVuZHBvaW50ID0gKGVuZHBvaW50OiBzdHJpbmcsIGluaXQ/OiBSZXF1ZXN0SW5pdCkgPT5cbiAgZmV0Y2goRFVBTF9VUkwgKyBlbmRwb2ludCwgaW5pdCk7XG5cbmNvbnN0IGdldEVuZHBvaW50ID0gKGVuZHBvaW50OiBzdHJpbmcpID0+IGZldGNoRW5kcG9pbnQoZW5kcG9pbnQpO1xuY29uc3QgcG9zdEVuZHBvaW50ID0gKGVuZHBvaW50OiBzdHJpbmcsIGJvZHk6IG9iamVjdCkgPT5cbiAgZmV0Y2hFbmRwb2ludChlbmRwb2ludCwge1xuICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgaGVhZGVyczogeyBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLCBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxuICB9KTtcblxuZXhwb3J0IGNvbnN0IGZldGNoUXVlcnkgPSAocXVlcnk6IHN0cmluZykgPT5cbiAgZ2V0RW5kcG9pbnQoXCIvcXVlcnlcIiArIGVuY29kZVVSSUNvbXBvbmVudChxdWVyeSkpO1xuZXhwb3J0IGNvbnN0IGZldGNoR2VuZXJhdGUgPSAoYm9keTogSVBvc3RCb2R5KSA9PlxuICBwb3N0RW5kcG9pbnQoXCIvZ2VuZXJhdGVcIiwgYm9keSk7XG5leHBvcnQgY29uc3QgZmV0Y2hTZWFyY2ggPSAoYm9keTogSVBvc3RCb2R5KSA9PiBwb3N0RW5kcG9pbnQoXCIvc2VhcmNoXCIsIGJvZHkpO1xuIl19